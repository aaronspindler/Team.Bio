FROM library/python:3.12.2-alpine

RUN apk update && apk upgrade && apk add --no-cache make g++ bash git openssh postgresql-dev curl

# Define build-time arguments
ARG PYTHON_VERSION
ARG DATABASE_URL
ARG REDIS_URL
ARG DEBUG
ARG SECRET_KEY
ARG AWS_ACCESS_KEY_ID
ARG AWS_SECRET_ACCESS_KEY
ARG GOOGLE_MAPS_API_KEY
ARG MAPBOX_API_KEY
ARG UNSPLASH_ACCESS_KEY
ARG OPENAI_KEY
ARG STRIPE_PUBLISHABLE_KEY
ARG STRIPE_SECRET_KEY
ARG STRIPE_PRICE_ID
ARG STRIPE_ENDPOINT_SECRET

# Set environment variables
ENV PYTHON_VERSION=${PYTHON_VERSION}
ENV DATABASE_URL=${DATABASE_URL}
ENV REDIS_URL=${REDIS_URL}
ENV DEBUG=${DEBUG}
ENV SECRET_KEY=${SECRET_KEY}
ENV AWS_ACCESS_KEY_ID=${AWS_ACCESS_KEY_ID}
ENV AWS_SECRET_ACCESS_KEY=${AWS_SECRET_ACCESS_KEY}
ENV GOOGLE_MAPS_API_KEY=${GOOGLE_MAPS_API_KEY}
ENV MAPBOX_API_KEY=${MAPBOX_API_KEY}
ENV UNSPLASH_ACCESS_KEY=${UNSPLASH_ACCESS_KEY}
ENV OPENAI_KEY=${OPENAI_KEY}
ENV STRIPE_PUBLISHABLE_KEY=${STRIPE_PUBLISHABLE_KEY}
ENV STRIPE_SECRET_KEY=${STRIPE_SECRET_KEY}
ENV STRIPE_PRICE_ID=${STRIPE_PRICE_ID}
ENV STRIPE_ENDPOINT_SECRET=${STRIPE_ENDPOINT_SECRET}

RUN mkdir -p /usr/src/app
WORKDIR /usr/src/app

COPY ./requirements.txt /usr/src/app/
RUN pip install --no-cache-dir -r requirements.txt
COPY ./ /usr/src/app

EXPOSE 80

RUN python manage.py collectstatic --no-input
RUN python manage.py migrate --no-input

CMD ["gunicorn", "config.wsgi", "--bind", "0.0.0.0:80"]